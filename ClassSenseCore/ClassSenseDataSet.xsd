<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ClassSenseDataSet" targetNamespace="http://tempuri.org/ClassSenseDataSet.xsd" xmlns:mstns="http://tempuri.org/ClassSenseDataSet.xsd" xmlns="http://tempuri.org/ClassSenseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ClassSenseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ClassSenseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ClassSenseCore.Properties.Settings.GlobalReference.Default.ClassSenseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="__MigrationHistoryTableAdapter" GeneratorDataComponentClassName="__MigrationHistoryTableAdapter" Name="__MigrationHistory" UserDataComponentName="__MigrationHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.__MigrationHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[__MigrationHistory] WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (@MigrationId, @ContextKey, @Model, @ProductVersion);
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MigrationId, ContextKey, Model, ProductVersion FROM dbo.[__MigrationHistory]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[__MigrationHistory] SET [MigrationId] = @MigrationId, [ContextKey] = @ContextKey, [Model] = @Model, [ProductVersion] = @ProductVersion WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion));
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MigrationId" DataSetColumn="MigrationId" />
              <Mapping SourceColumn="ContextKey" DataSetColumn="ContextKey" />
              <Mapping SourceColumn="Model" DataSetColumn="Model" />
              <Mapping SourceColumn="ProductVersion" DataSetColumn="ProductVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AttendsTableAdapter" GeneratorDataComponentClassName="AttendsTableAdapter" Name="Attends" UserDataComponentName="AttendsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Attends" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Attends] WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID) AND ([SectionID] = @Original_SectionID) AND ([Date] = @Original_Date) AND ([IsPresent] = @Original_IsPresent))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsPresent" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPresent" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Attends] ([StudentID], [SectionID], [Date], [IsPresent]) VALUES (@StudentID, @SectionID, @Date, @IsPresent);
SELECT ID, StudentID, SectionID, Date, IsPresent FROM Attends WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPresent" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPresent" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, StudentID, SectionID, Date, IsPresent FROM dbo.Attends</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Attends] SET [StudentID] = @StudentID, [SectionID] = @SectionID, [Date] = @Date, [IsPresent] = @IsPresent WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID) AND ([SectionID] = @Original_SectionID) AND ([Date] = @Original_Date) AND ([IsPresent] = @Original_IsPresent));
SELECT ID, StudentID, SectionID, Date, IsPresent FROM Attends WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsPresent" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPresent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsPresent" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsPresent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Attends" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="SectionID" DataSetColumn="SectionID" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="IsPresent" DataSetColumn="IsPresent" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoursesTableAdapter" GeneratorDataComponentClassName="CoursesTableAdapter" Name="Courses" UserDataComponentName="CoursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Courses] WHERE (([ID] = @Original_ID) AND ((@IsNull_Code = 1 AND [Code] IS NULL) OR ([Code] = @Original_Code)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Courses] ([Code], [Name]) VALUES (@Code, @Name);
SELECT ID, Code, Name FROM Courses WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Code, Name FROM dbo.Courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Courses] SET [Code] = @Code, [Name] = @Name WHERE (([ID] = @Original_ID) AND ((@IsNull_Code = 1 AND [Code] IS NULL) OR ([Code] = @Original_Code)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT ID, Code, Name FROM Courses WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EnrolledsTableAdapter" GeneratorDataComponentClassName="EnrolledsTableAdapter" Name="Enrolleds" UserDataComponentName="EnrolledsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Enrolleds" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrolleds] WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID) AND ([SectionID] = @Original_SectionID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrolleds] ([Semester], [StudentID], [SectionID]) VALUES (@Semester, @StudentID, @SectionID);
SELECT ID, Semester, StudentID, SectionID FROM Enrolleds WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Semester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Semester, StudentID, SectionID FROM dbo.Enrolleds</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrolleds] SET [Semester] = @Semester, [StudentID] = @StudentID, [SectionID] = @SectionID WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID) AND ([SectionID] = @Original_SectionID));
SELECT ID, Semester, StudentID, SectionID FROM Enrolleds WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Semester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SectionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Enrolleds" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Semester" DataSetColumn="Semester" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="SectionID" DataSetColumn="SectionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ImagesTableAdapter" GeneratorDataComponentClassName="ImagesTableAdapter" Name="Images" UserDataComponentName="ImagesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Images" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Images] WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Images] ([URL], [StudentID]) VALUES (@URL, @StudentID);
SELECT ID, URL, StudentID FROM Images WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@URL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="URL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, URL, StudentID FROM dbo.Images</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Images] SET [URL] = @URL, [StudentID] = @StudentID WHERE (([ID] = @Original_ID) AND ([StudentID] = @Original_StudentID));
SELECT ID, URL, StudentID FROM Images WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@URL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="URL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Images" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="URL" DataSetColumn="URL" />
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstructorsTableAdapter" GeneratorDataComponentClassName="InstructorsTableAdapter" Name="Instructors" UserDataComponentName="InstructorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Instructors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Instructors] WHERE (([ID] = @Original_ID) AND ([IsAdmin] = @Original_IsAdmin))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsAdmin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsAdmin" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Instructors] ([FName], [LName], [Email], [Password], [Salt], [ProfilePic], [IsAdmin]) VALUES (@FName, @LName, @Email, @Password, @Salt, @ProfilePic, @IsAdmin);
SELECT ID, FName, LName, Email, Password, Salt, ProfilePic, IsAdmin FROM Instructors WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Salt" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Salt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@ProfilePic" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="ProfilePic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsAdmin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsAdmin" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, FName, LName, Email, Password, Salt, ProfilePic, IsAdmin
FROM     Instructors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Instructors] SET [FName] = @FName, [LName] = @LName, [Email] = @Email, [Password] = @Password, [Salt] = @Salt, [ProfilePic] = @ProfilePic, [IsAdmin] = @IsAdmin WHERE (([ID] = @Original_ID) AND ([IsAdmin] = @Original_IsAdmin));
SELECT ID, FName, LName, Email, Password, Salt, ProfilePic, IsAdmin FROM Instructors WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Salt" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Salt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@ProfilePic" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="ProfilePic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsAdmin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsAdmin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsAdmin" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsAdmin" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Instructors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Salt" DataSetColumn="Salt" />
              <Mapping SourceColumn="ProfilePic" DataSetColumn="ProfilePic" />
              <Mapping SourceColumn="IsAdmin" DataSetColumn="IsAdmin" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Instructors" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="FindInstructorsByEmail" GeneratorSourceName="FindInstructorByEmail" GetMethodModifier="Public" GetMethodName="FindInstructorsByEmail" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="FindInstructorsByEmail" UserSourceName="FindInstructorsByEmail">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Email, FName, ID, IsAdmin, LName, Password, ProfilePic, Salt FROM Instructors WHERE (Email = @email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="email" ColumnName="Email" DataSourceName="ClassSense.dbo.Instructors" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RemindersTableAdapter" GeneratorDataComponentClassName="RemindersTableAdapter" Name="Reminders" UserDataComponentName="RemindersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Reminders" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Reminders] WHERE (([ID] = @Original_ID) AND ([Date] = @Original_Date) AND ([IsDone] = @Original_IsDone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Reminders] ([Description], [Date], [IsDone]) VALUES (@Description, @Date, @IsDone);
SELECT ID, Description, Date, IsDone FROM Reminders WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Description, Date, IsDone FROM dbo.Reminders</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Reminders] SET [Description] = @Description, [Date] = @Date, [IsDone] = @IsDone WHERE (([ID] = @Original_ID) AND ([Date] = @Original_Date) AND ([IsDone] = @Original_IsDone));
SELECT ID, Description, Date, IsDone FROM Reminders WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Reminders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="IsDone" DataSetColumn="IsDone" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoomsTableAdapter" GeneratorDataComponentClassName="RoomsTableAdapter" Name="Rooms" UserDataComponentName="RoomsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Rooms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Rooms] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Rooms] ([Code]) VALUES (@Code);
SELECT ID, Code FROM Rooms WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Code FROM dbo.Rooms</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Rooms] SET [Code] = @Code WHERE (([ID] = @Original_ID));
SELECT ID, Code FROM Rooms WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Rooms" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SectionsTableAdapter" GeneratorDataComponentClassName="SectionsTableAdapter" Name="Sections" UserDataComponentName="SectionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Sections" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Sections] WHERE (([ID] = @Original_ID) AND ((@IsNull_Letter = 1 AND [Letter] IS NULL) OR ([Letter] = @Original_Letter)) AND ((@IsNull_Days = 1 AND [Days] IS NULL) OR ([Days] = @Original_Days)) AND ([CourseID] = @Original_CourseID) AND ([RoomID] = @Original_RoomID) AND ([InstructorID] = @Original_InstructorID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Letter" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Letter" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Days" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Days" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstructorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstructorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Sections] ([Letter], [Days], [Slot], [CourseID], [RoomID], [InstructorID]) VALUES (@Letter, @Days, @Slot, @CourseID, @RoomID, @InstructorID);
SELECT ID, Letter, Days, Slot, CourseID, RoomID, InstructorID FROM Sections WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Letter" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Days" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Slot" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Slot" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstructorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstructorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, Letter, Days, Slot, CourseID, RoomID, InstructorID
FROM     Sections</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Sections] SET [Letter] = @Letter, [Days] = @Days, [Slot] = @Slot, [CourseID] = @CourseID, [RoomID] = @RoomID, [InstructorID] = @InstructorID WHERE (([ID] = @Original_ID) AND ((@IsNull_Letter = 1 AND [Letter] IS NULL) OR ([Letter] = @Original_Letter)) AND ((@IsNull_Days = 1 AND [Days] IS NULL) OR ([Days] = @Original_Days)) AND ([CourseID] = @Original_CourseID) AND ([RoomID] = @Original_RoomID) AND ([InstructorID] = @Original_InstructorID));
SELECT ID, Letter, Days, Slot, CourseID, RoomID, InstructorID FROM Sections WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Letter" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Days" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Slot" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Slot" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstructorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstructorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Letter" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Letter" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Letter" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Days" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Days" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Days" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstructorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstructorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Sections" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Days" DataSetColumn="Days" />
              <Mapping SourceColumn="Slot" DataSetColumn="Slot" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="RoomID" DataSetColumn="RoomID" />
              <Mapping SourceColumn="InstructorID" DataSetColumn="InstructorID" />
              <Mapping SourceColumn="Letter" DataSetColumn="Letter" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([Fname], [LName], [Email]) VALUES (@Fname, @LName, @Email);
SELECT ID, Fname, LName, Email FROM Students WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Fname, LName, Email FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [Fname] = @Fname, [LName] = @LName, [Email] = @Email WHERE (([ID] = @Original_ID));
SELECT ID, Fname, LName, Email FROM Students WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByFullName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByFullName" GeneratorSourceName="FillByFullName" GetMethodModifier="Public" GetMethodName="GetDataByFullName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByFullName" UserSourceName="FillByFullName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, Fname, LName, Email FROM dbo.Students
where (Fname+Lname=@Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Name" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBySection" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBySection" GeneratorSourceName="FillBySection" GetMethodModifier="Public" GetMethodName="GetDataBySection" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBySection" UserSourceName="FillBySection">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Students.ID, Students.Fname, Students.LName, Students.Email
FROM     Enrolleds INNER JOIN
                  Students ON Enrolleds.StudentID = Students.ID
WHERE  (Enrolleds.SectionID = @SectionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SectionID" ColumnName="SectionID" DataSourceName="ClassSense.dbo.Enrolleds" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SectionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SectionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Students" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetDataBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, Fname, LName, Email FROM dbo.Students
where (Fname+' '+Lname=@Name) or Email=@Email</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Name" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Email" ColumnName="Email" DataSourceName="ClassSense.dbo.Students" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SectionDetailsTableAdapter" GeneratorDataComponentClassName="SectionDetailsTableAdapter" Name="SectionDetails" UserDataComponentName="SectionDetailsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillSectionDetails" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetSectionDetails" GeneratorSourceName="FillSectionDetails" GetMethodModifier="Public" GetMethodName="GetSectionDetails" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetSectionDetails" UserSourceName="FillSectionDetails">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Sections.ID, Sections.CourseID, Sections.Letter, Courses.Code, Courses.Name, Rooms.Code AS Room, Sections.Days, Sections.Slot, Sections.InstructorID
FROM     Sections INNER JOIN
                  Rooms ON Sections.RoomID = Rooms.ID INNER JOIN
                  Courses ON Sections.CourseID = Courses.ID
WHERE  (Sections.InstructorID = @InstructorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="InstructorID" ColumnName="InstructorID" DataSourceName="ClassSense.dbo.Sections" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InstructorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InstructorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Days" DataSetColumn="Days" />
              <Mapping SourceColumn="Slot" DataSetColumn="Slot" />
              <Mapping SourceColumn="Room" DataSetColumn="Room" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="Letter" DataSetColumn="Letter" />
              <Mapping SourceColumn="InstructorID" DataSetColumn="InstructorID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Sections.ID, Sections.CourseID, Sections.Letter, Courses.Code, Courses.Name, Rooms.Code AS Room, Sections.Days, Sections.Slot, Sections.InstructorID
FROM     Sections INNER JOIN
                  Rooms ON Sections.RoomID = Rooms.ID INNER JOIN
                  Courses ON Sections.CourseID = Courses.ID
WHERE  (Courses.ID = @CourseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseID" ColumnName="ID" DataSourceName="ClassSense.dbo.Courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Sections.ID, Sections.CourseID, Sections.Letter, Courses.Code, Courses.Name, Rooms.Code AS Room, Sections.Days, Sections.Slot, Sections.InstructorID
FROM     Sections INNER JOIN
                  Rooms ON Sections.RoomID = Rooms.ID INNER JOIN
                  Courses ON Sections.CourseID = Courses.ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdminStudentsTableAdapter" GeneratorDataComponentClassName="AdminStudentsTableAdapter" Name="AdminStudents" UserDataComponentName="AdminStudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillAdminStudent" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetAdminStudentsData" GeneratorSourceName="FillAdminStudent" GetMethodModifier="Public" GetMethodName="GetAdminStudentsData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetAdminStudentsData" UserSourceName="FillAdminStudent">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Images.URL, Students.ID, Students.Fname, Students.LName, Students.Email
FROM     Images INNER JOIN
                  Students ON Images.StudentID = Students.ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="URL" DataSetColumn="URL" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Instructor AttendanceTableAdapter" GeneratorDataComponentClassName="Instructor_AttendanceTableAdapter" Name="Instructor Attendance" UserDataComponentName="Instructor AttendanceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillInstuctorAttendance" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetInstuctorAttendanceData" GeneratorSourceName="FillInstuctorAttendance" GetMethodModifier="Public" GetMethodName="GetInstuctorAttendanceData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetInstuctorAttendanceData" UserSourceName="FillInstuctorAttendance">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Attends.StudentID, Attends.SectionID, Attends.Date, Attends.IsPresent, Students.Fname, Students.LName, Students.Email, Sections.CourseID
FROM     Attends INNER JOIN
                  Enrolleds ON Attends.ID = Enrolleds.ID INNER JOIN
                  Images ON Attends.ID = Images.ID INNER JOIN
                  Sections ON Attends.SectionID = Sections.ID AND Enrolleds.SectionID = Sections.ID INNER JOIN
                  Students ON Attends.StudentID = Students.ID AND Enrolleds.StudentID = Students.ID AND Images.StudentID = Students.ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentID" DataSetColumn="StudentID" />
              <Mapping SourceColumn="SectionID" DataSetColumn="SectionID" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="IsPresent" DataSetColumn="IsPresent" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstructorViewTableAdapter" GeneratorDataComponentClassName="InstructorViewTableAdapter" Name="InstructorView" UserDataComponentName="InstructorViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillInstructorView" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetInstructorViewData" GeneratorSourceName="FillInstructorView" GetMethodModifier="Public" GetMethodName="GetInstructorViewData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetInstructorViewData" UserSourceName="FillInstructorView">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Courses.Name, Rooms.*, Sections.*, Students.*
FROM     Images INNER JOIN
                  Courses ON Images.ID = Courses.ID INNER JOIN
                  Rooms ON Images.ID = Rooms.ID INNER JOIN
                  Sections ON Courses.ID = Sections.CourseID AND Rooms.ID = Sections.RoomID INNER JOIN
                  Students ON Images.StudentID = Students.ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="ID1" DataSetColumn="ID1" />
              <Mapping SourceColumn="Days" DataSetColumn="Days" />
              <Mapping SourceColumn="Slot" DataSetColumn="Slot" />
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="RoomID" DataSetColumn="RoomID" />
              <Mapping SourceColumn="InstructorID" DataSetColumn="InstructorID" />
              <Mapping SourceColumn="ID2" DataSetColumn="ID2" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Reminders1TableAdapter" GeneratorDataComponentClassName="Reminders1TableAdapter" Name="Reminders1" UserDataComponentName="Reminders1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectName="ClassSense.dbo.Reminders" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillReminder" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetReminderData" GeneratorSourceName="FillReminder" GetMethodModifier="Public" GetMethodName="GetReminderData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetReminderData" UserSourceName="FillReminder">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Reminders] WHERE (([ID] = @Original_ID) AND ([Date] = @Original_Date) AND ([IsDone] = @Original_IsDone))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Reminders] ([Description], [Date], [IsDone]) VALUES (@Description, @Date, @IsDone);
SELECT ID, Description, Date, IsDone FROM Reminders WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Reminders.*
FROM     Reminders</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Reminders] SET [Description] = @Description, [Date] = @Date, [IsDone] = @IsDone WHERE (([ID] = @Original_ID) AND ([Date] = @Original_Date) AND ([IsDone] = @Original_IsDone));
SELECT ID, Description, Date, IsDone FROM Reminders WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsDone" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsDone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="ClassSense.dbo.Reminders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="IsDone" DataSetColumn="IsDone" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ReportTableAdapter" GeneratorDataComponentClassName="ReportTableAdapter" Name="Report" UserDataComponentName="ReportTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClassSenseConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillReport" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetReportData" GeneratorSourceName="FillReport" GetMethodModifier="Public" GetMethodName="GetReportData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetReportData" UserSourceName="FillReport">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Instructors.FName, Instructors.LName, Instructors.ID, Students.ID AS Expr1, Students.Fname AS Expr2, Students.LName AS Expr3, Courses.Code, Attends.Date, Attends.IsPresent
FROM     Attends INNER JOIN
                  Courses ON Attends.ID = Courses.ID INNER JOIN
                  Instructors ON Attends.ID = Instructors.ID INNER JOIN
                  Students ON Attends.StudentID = Students.ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
              <Mapping SourceColumn="Expr2" DataSetColumn="Expr2" />
              <Mapping SourceColumn="Expr3" DataSetColumn="Expr3" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="IsPresent" DataSetColumn="IsPresent" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ClassSenseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="ClassSenseDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ClassSenseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="__MigrationHistory" msprop:Generator_RowEvHandlerName="__MigrationHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="__MigrationHistoryRowDeleted" msprop:Generator_RowDeletingName="__MigrationHistoryRowDeleting" msprop:Generator_RowEvArgName="__MigrationHistoryRowChangeEvent" msprop:Generator_TablePropName="__MigrationHistory" msprop:Generator_RowChangedName="__MigrationHistoryRowChanged" msprop:Generator_UserTableName="__MigrationHistory" msprop:Generator_RowChangingName="__MigrationHistoryRowChanging" msprop:Generator_RowClassName="__MigrationHistoryRow" msprop:Generator_TableClassName="__MigrationHistoryDataTable" msprop:Generator_TableVarName="table__MigrationHistory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MigrationId" msprop:Generator_ColumnPropNameInTable="MigrationIdColumn" msprop:Generator_ColumnPropNameInRow="MigrationId" msprop:Generator_UserColumnName="MigrationId" msprop:Generator_ColumnVarNameInTable="columnMigrationId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContextKey" msprop:Generator_ColumnPropNameInTable="ContextKeyColumn" msprop:Generator_ColumnPropNameInRow="ContextKey" msprop:Generator_UserColumnName="ContextKey" msprop:Generator_ColumnVarNameInTable="columnContextKey">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Model" msprop:Generator_ColumnPropNameInTable="ModelColumn" msprop:Generator_ColumnPropNameInRow="Model" msprop:Generator_UserColumnName="Model" msprop:Generator_ColumnVarNameInTable="columnModel" type="xs:base64Binary" />
              <xs:element name="ProductVersion" msprop:Generator_ColumnPropNameInTable="ProductVersionColumn" msprop:Generator_ColumnPropNameInRow="ProductVersion" msprop:Generator_UserColumnName="ProductVersion" msprop:Generator_ColumnVarNameInTable="columnProductVersion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Attends" msprop:Generator_RowEvHandlerName="AttendsRowChangeEventHandler" msprop:Generator_RowDeletedName="AttendsRowDeleted" msprop:Generator_RowDeletingName="AttendsRowDeleting" msprop:Generator_RowEvArgName="AttendsRowChangeEvent" msprop:Generator_TablePropName="Attends" msprop:Generator_RowChangedName="AttendsRowChanged" msprop:Generator_UserTableName="Attends" msprop:Generator_RowChangingName="AttendsRowChanging" msprop:Generator_RowClassName="AttendsRow" msprop:Generator_TableClassName="AttendsDataTable" msprop:Generator_TableVarName="tableAttends">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="SectionID" msprop:Generator_ColumnPropNameInTable="SectionIDColumn" msprop:Generator_ColumnPropNameInRow="SectionID" msprop:Generator_UserColumnName="SectionID" msprop:Generator_ColumnVarNameInTable="columnSectionID" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnVarNameInTable="columnDate" type="xs:dateTime" />
              <xs:element name="IsPresent" msprop:Generator_ColumnPropNameInTable="IsPresentColumn" msprop:Generator_ColumnPropNameInRow="IsPresent" msprop:Generator_UserColumnName="IsPresent" msprop:Generator_ColumnVarNameInTable="columnIsPresent" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Courses" msprop:Generator_RowEvHandlerName="CoursesRowChangeEventHandler" msprop:Generator_RowDeletedName="CoursesRowDeleted" msprop:Generator_RowDeletingName="CoursesRowDeleting" msprop:Generator_RowEvArgName="CoursesRowChangeEvent" msprop:Generator_TablePropName="Courses" msprop:Generator_RowChangedName="CoursesRowChanged" msprop:Generator_UserTableName="Courses" msprop:Generator_RowChangingName="CoursesRowChanging" msprop:Generator_RowClassName="CoursesRow" msprop:Generator_TableClassName="CoursesDataTable" msprop:Generator_TableVarName="tableCourses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_UserColumnName="Code" msprop:Generator_ColumnVarNameInTable="columnCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrolleds" msprop:Generator_RowEvHandlerName="EnrolledsRowChangeEventHandler" msprop:Generator_RowDeletedName="EnrolledsRowDeleted" msprop:Generator_RowDeletingName="EnrolledsRowDeleting" msprop:Generator_RowEvArgName="EnrolledsRowChangeEvent" msprop:Generator_TablePropName="Enrolleds" msprop:Generator_RowChangedName="EnrolledsRowChanged" msprop:Generator_UserTableName="Enrolleds" msprop:Generator_RowChangingName="EnrolledsRowChanging" msprop:Generator_RowClassName="EnrolledsRow" msprop:Generator_TableClassName="EnrolledsDataTable" msprop:Generator_TableVarName="tableEnrolleds">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Semester" msprop:Generator_ColumnPropNameInTable="SemesterColumn" msprop:Generator_ColumnPropNameInRow="Semester" msprop:Generator_UserColumnName="Semester" msprop:Generator_ColumnVarNameInTable="columnSemester" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="SectionID" msprop:Generator_ColumnPropNameInTable="SectionIDColumn" msprop:Generator_ColumnPropNameInRow="SectionID" msprop:Generator_UserColumnName="SectionID" msprop:Generator_ColumnVarNameInTable="columnSectionID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Images" msprop:Generator_RowEvHandlerName="ImagesRowChangeEventHandler" msprop:Generator_RowDeletedName="ImagesRowDeleted" msprop:Generator_RowDeletingName="ImagesRowDeleting" msprop:Generator_RowEvArgName="ImagesRowChangeEvent" msprop:Generator_TablePropName="Images" msprop:Generator_RowChangedName="ImagesRowChanged" msprop:Generator_UserTableName="Images" msprop:Generator_RowChangingName="ImagesRowChanging" msprop:Generator_RowClassName="ImagesRow" msprop:Generator_TableClassName="ImagesDataTable" msprop:Generator_TableVarName="tableImages">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="URL" msprop:Generator_ColumnPropNameInTable="URLColumn" msprop:Generator_ColumnPropNameInRow="URL" msprop:Generator_UserColumnName="URL" msprop:Generator_ColumnVarNameInTable="columnURL" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instructors" msprop:Generator_RowEvHandlerName="InstructorsRowChangeEventHandler" msprop:Generator_RowDeletedName="InstructorsRowDeleted" msprop:Generator_RowDeletingName="InstructorsRowDeleting" msprop:Generator_RowEvArgName="InstructorsRowChangeEvent" msprop:Generator_TablePropName="Instructors" msprop:Generator_RowChangedName="InstructorsRowChanged" msprop:Generator_UserTableName="Instructors" msprop:Generator_RowChangingName="InstructorsRowChanging" msprop:Generator_RowClassName="InstructorsRow" msprop:Generator_TableClassName="InstructorsDataTable" msprop:Generator_TableVarName="tableInstructors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_UserColumnName="FName" msprop:Generator_ColumnVarNameInTable="columnFName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Salt" msprop:Generator_ColumnPropNameInTable="SaltColumn" msprop:Generator_ColumnPropNameInRow="Salt" msprop:Generator_UserColumnName="Salt" msprop:Generator_ColumnVarNameInTable="columnSalt" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProfilePic" msprop:Generator_ColumnPropNameInTable="ProfilePicColumn" msprop:Generator_ColumnPropNameInRow="ProfilePic" msprop:Generator_UserColumnName="ProfilePic" msprop:Generator_ColumnVarNameInTable="columnProfilePic" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="IsAdmin" msprop:Generator_ColumnPropNameInTable="IsAdminColumn" msprop:Generator_ColumnPropNameInRow="IsAdmin" msprop:Generator_UserColumnName="IsAdmin" msprop:Generator_ColumnVarNameInTable="columnIsAdmin" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Reminders" msprop:Generator_RowEvHandlerName="RemindersRowChangeEventHandler" msprop:Generator_RowDeletedName="RemindersRowDeleted" msprop:Generator_RowDeletingName="RemindersRowDeleting" msprop:Generator_RowEvArgName="RemindersRowChangeEvent" msprop:Generator_TablePropName="Reminders" msprop:Generator_RowChangedName="RemindersRowChanged" msprop:Generator_UserTableName="Reminders" msprop:Generator_RowChangingName="RemindersRowChanging" msprop:Generator_RowClassName="RemindersRow" msprop:Generator_TableClassName="RemindersDataTable" msprop:Generator_TableVarName="tableReminders">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnVarNameInTable="columnDate" type="xs:dateTime" />
              <xs:element name="IsDone" msprop:Generator_ColumnPropNameInTable="IsDoneColumn" msprop:Generator_ColumnPropNameInRow="IsDone" msprop:Generator_UserColumnName="IsDone" msprop:Generator_ColumnVarNameInTable="columnIsDone" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Rooms" msprop:Generator_RowEvHandlerName="RoomsRowChangeEventHandler" msprop:Generator_RowDeletedName="RoomsRowDeleted" msprop:Generator_RowDeletingName="RoomsRowDeleting" msprop:Generator_RowEvArgName="RoomsRowChangeEvent" msprop:Generator_TablePropName="Rooms" msprop:Generator_RowChangedName="RoomsRowChanged" msprop:Generator_UserTableName="Rooms" msprop:Generator_RowChangingName="RoomsRowChanging" msprop:Generator_RowClassName="RoomsRow" msprop:Generator_TableClassName="RoomsDataTable" msprop:Generator_TableVarName="tableRooms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_UserColumnName="Code" msprop:Generator_ColumnVarNameInTable="columnCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sections" msprop:Generator_RowEvHandlerName="SectionsRowChangeEventHandler" msprop:Generator_RowDeletedName="SectionsRowDeleted" msprop:Generator_RowDeletingName="SectionsRowDeleting" msprop:Generator_RowEvArgName="SectionsRowChangeEvent" msprop:Generator_TablePropName="Sections" msprop:Generator_RowChangedName="SectionsRowChanged" msprop:Generator_UserTableName="Sections" msprop:Generator_RowChangingName="SectionsRowChanging" msprop:Generator_RowClassName="SectionsRow" msprop:Generator_TableClassName="SectionsDataTable" msprop:Generator_TableVarName="tableSections">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Days" msprop:Generator_ColumnPropNameInTable="DaysColumn" msprop:Generator_ColumnPropNameInRow="Days" msprop:Generator_UserColumnName="Days" msprop:Generator_ColumnVarNameInTable="columnDays" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Slot" msprop:Generator_ColumnPropNameInTable="SlotColumn" msprop:Generator_ColumnPropNameInRow="Slot" msprop:Generator_UserColumnName="Slot" msprop:Generator_ColumnVarNameInTable="columnSlot" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_UserColumnName="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" type="xs:int" />
              <xs:element name="RoomID" msprop:Generator_ColumnPropNameInTable="RoomIDColumn" msprop:Generator_ColumnPropNameInRow="RoomID" msprop:Generator_UserColumnName="RoomID" msprop:Generator_ColumnVarNameInTable="columnRoomID" type="xs:int" />
              <xs:element name="InstructorID" msprop:Generator_ColumnPropNameInTable="InstructorIDColumn" msprop:Generator_ColumnPropNameInRow="InstructorID" msprop:Generator_UserColumnName="InstructorID" msprop:Generator_ColumnVarNameInTable="columnInstructorID" type="xs:int" />
              <xs:element name="Letter" msprop:Generator_ColumnPropNameInTable="LetterColumn" msprop:Generator_ColumnPropNameInRow="Letter" msprop:Generator_UserColumnName="Letter" msprop:Generator_ColumnVarNameInTable="columnLetter" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnVarNameInTable="columnFname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SectionDetails" msprop:Generator_RowEvHandlerName="SectionDetailsRowChangeEventHandler" msprop:Generator_RowDeletedName="SectionDetailsRowDeleted" msprop:Generator_RowDeletingName="SectionDetailsRowDeleting" msprop:Generator_RowEvArgName="SectionDetailsRowChangeEvent" msprop:Generator_TablePropName="SectionDetails" msprop:Generator_RowChangedName="SectionDetailsRowChanged" msprop:Generator_UserTableName="SectionDetails" msprop:Generator_RowChangingName="SectionDetailsRowChanging" msprop:Generator_RowClassName="SectionDetailsRow" msprop:Generator_TableClassName="SectionDetailsDataTable" msprop:Generator_TableVarName="tableSectionDetails">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_UserColumnName="Code" msprop:Generator_ColumnVarNameInTable="columnCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Days" msprop:Generator_ColumnPropNameInTable="DaysColumn" msprop:Generator_ColumnPropNameInRow="Days" msprop:Generator_UserColumnName="Days" msprop:Generator_ColumnVarNameInTable="columnDays" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Slot" msprop:Generator_ColumnPropNameInTable="SlotColumn" msprop:Generator_ColumnPropNameInRow="Slot" msprop:Generator_UserColumnName="Slot" msprop:Generator_ColumnVarNameInTable="columnSlot" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Room" msprop:Generator_ColumnPropNameInTable="RoomColumn" msprop:Generator_ColumnPropNameInRow="Room" msprop:Generator_UserColumnName="Room" msprop:Generator_ColumnVarNameInTable="columnRoom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_UserColumnName="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" type="xs:int" />
              <xs:element name="Letter" msprop:Generator_ColumnPropNameInTable="LetterColumn" msprop:Generator_ColumnPropNameInRow="Letter" msprop:Generator_UserColumnName="Letter" msprop:Generator_ColumnVarNameInTable="columnLetter" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InstructorID" msprop:Generator_UserColumnName="InstructorID" msprop:Generator_ColumnPropNameInTable="InstructorIDColumn" msprop:Generator_ColumnPropNameInRow="InstructorID" msprop:Generator_ColumnVarNameInTable="columnInstructorID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AdminStudents" msprop:Generator_RowEvHandlerName="AdminStudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="AdminStudentsRowDeleted" msprop:Generator_RowDeletingName="AdminStudentsRowDeleting" msprop:Generator_RowEvArgName="AdminStudentsRowChangeEvent" msprop:Generator_TablePropName="AdminStudents" msprop:Generator_RowChangedName="AdminStudentsRowChanged" msprop:Generator_UserTableName="AdminStudents" msprop:Generator_RowChangingName="AdminStudentsRowChanging" msprop:Generator_RowClassName="AdminStudentsRow" msprop:Generator_TableClassName="AdminStudentsDataTable" msprop:Generator_TableVarName="tableAdminStudents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="URL" msprop:Generator_ColumnPropNameInTable="URLColumn" msprop:Generator_ColumnPropNameInRow="URL" msprop:Generator_UserColumnName="URL" msprop:Generator_ColumnVarNameInTable="columnURL" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnVarNameInTable="columnFname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Instructor_x0020_Attendance" msprop:Generator_RowEvHandlerName="Instructor_AttendanceRowChangeEventHandler" msprop:Generator_RowDeletedName="Instructor_AttendanceRowDeleted" msprop:Generator_RowDeletingName="Instructor_AttendanceRowDeleting" msprop:Generator_RowEvArgName="Instructor_AttendanceRowChangeEvent" msprop:Generator_TablePropName="Instructor_Attendance" msprop:Generator_RowChangedName="Instructor_AttendanceRowChanged" msprop:Generator_UserTableName="Instructor Attendance" msprop:Generator_RowChangingName="Instructor_AttendanceRowChanging" msprop:Generator_RowClassName="Instructor_AttendanceRow" msprop:Generator_TableClassName="Instructor_AttendanceDataTable" msprop:Generator_TableVarName="tableInstructor_Attendance">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentID" msprop:Generator_ColumnPropNameInTable="StudentIDColumn" msprop:Generator_ColumnPropNameInRow="StudentID" msprop:Generator_UserColumnName="StudentID" msprop:Generator_ColumnVarNameInTable="columnStudentID" type="xs:int" />
              <xs:element name="SectionID" msprop:Generator_ColumnPropNameInTable="SectionIDColumn" msprop:Generator_ColumnPropNameInRow="SectionID" msprop:Generator_UserColumnName="SectionID" msprop:Generator_ColumnVarNameInTable="columnSectionID" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnVarNameInTable="columnDate" type="xs:dateTime" />
              <xs:element name="IsPresent" msprop:Generator_ColumnPropNameInTable="IsPresentColumn" msprop:Generator_ColumnPropNameInRow="IsPresent" msprop:Generator_UserColumnName="IsPresent" msprop:Generator_ColumnVarNameInTable="columnIsPresent" type="xs:boolean" />
              <xs:element name="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnVarNameInTable="columnFname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_UserColumnName="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InstructorView" msprop:Generator_RowEvHandlerName="InstructorViewRowChangeEventHandler" msprop:Generator_RowDeletedName="InstructorViewRowDeleted" msprop:Generator_RowDeletingName="InstructorViewRowDeleting" msprop:Generator_RowEvArgName="InstructorViewRowChangeEvent" msprop:Generator_TablePropName="InstructorView" msprop:Generator_RowChangedName="InstructorViewRowChanged" msprop:Generator_UserTableName="InstructorView" msprop:Generator_RowChangingName="InstructorViewRowChanging" msprop:Generator_RowClassName="InstructorViewRow" msprop:Generator_TableClassName="InstructorViewDataTable" msprop:Generator_TableVarName="tableInstructorView">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_UserColumnName="Code" msprop:Generator_ColumnVarNameInTable="columnCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID1" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID1Column" msprop:Generator_ColumnPropNameInRow="ID1" msprop:Generator_UserColumnName="ID1" msprop:Generator_ColumnVarNameInTable="columnID1" type="xs:int" />
              <xs:element name="Days" msprop:Generator_ColumnPropNameInTable="DaysColumn" msprop:Generator_ColumnPropNameInRow="Days" msprop:Generator_UserColumnName="Days" msprop:Generator_ColumnVarNameInTable="columnDays" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Slot" msprop:Generator_ColumnPropNameInTable="SlotColumn" msprop:Generator_ColumnPropNameInRow="Slot" msprop:Generator_UserColumnName="Slot" msprop:Generator_ColumnVarNameInTable="columnSlot" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_UserColumnName="CourseID" msprop:Generator_ColumnVarNameInTable="columnCourseID" type="xs:int" />
              <xs:element name="RoomID" msprop:Generator_ColumnPropNameInTable="RoomIDColumn" msprop:Generator_ColumnPropNameInRow="RoomID" msprop:Generator_UserColumnName="RoomID" msprop:Generator_ColumnVarNameInTable="columnRoomID" type="xs:int" />
              <xs:element name="InstructorID" msprop:Generator_ColumnPropNameInTable="InstructorIDColumn" msprop:Generator_ColumnPropNameInRow="InstructorID" msprop:Generator_UserColumnName="InstructorID" msprop:Generator_ColumnVarNameInTable="columnInstructorID" type="xs:int" />
              <xs:element name="ID2" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="ID2Column" msprop:Generator_ColumnPropNameInRow="ID2" msprop:Generator_UserColumnName="ID2" msprop:Generator_ColumnVarNameInTable="columnID2" type="xs:int" />
              <xs:element name="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnVarNameInTable="columnFname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Reminders1" msprop:Generator_RowEvHandlerName="Reminders1RowChangeEventHandler" msprop:Generator_RowDeletedName="Reminders1RowDeleted" msprop:Generator_RowDeletingName="Reminders1RowDeleting" msprop:Generator_RowEvArgName="Reminders1RowChangeEvent" msprop:Generator_TablePropName="Reminders1" msprop:Generator_RowChangedName="Reminders1RowChanged" msprop:Generator_UserTableName="Reminders1" msprop:Generator_RowChangingName="Reminders1RowChanging" msprop:Generator_RowClassName="Reminders1Row" msprop:Generator_TableClassName="Reminders1DataTable" msprop:Generator_TableVarName="tableReminders1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnVarNameInTable="columnDate" type="xs:dateTime" />
              <xs:element name="IsDone" msprop:Generator_ColumnPropNameInTable="IsDoneColumn" msprop:Generator_ColumnPropNameInRow="IsDone" msprop:Generator_UserColumnName="IsDone" msprop:Generator_ColumnVarNameInTable="columnIsDone" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Report" msprop:Generator_RowEvHandlerName="ReportRowChangeEventHandler" msprop:Generator_RowDeletedName="ReportRowDeleted" msprop:Generator_RowDeletingName="ReportRowDeleting" msprop:Generator_RowEvArgName="ReportRowChangeEvent" msprop:Generator_TablePropName="Report" msprop:Generator_RowChangedName="ReportRowChanged" msprop:Generator_UserTableName="Report" msprop:Generator_RowChangingName="ReportRowChanging" msprop:Generator_RowClassName="ReportRow" msprop:Generator_TableClassName="ReportDataTable" msprop:Generator_TableVarName="tableReport">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_UserColumnName="FName" msprop:Generator_ColumnVarNameInTable="columnFName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_UserColumnName="LName" msprop:Generator_ColumnVarNameInTable="columnLName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="Expr1" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="Expr1Column" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_UserColumnName="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" type="xs:int" />
              <xs:element name="Expr2" msprop:Generator_ColumnPropNameInTable="Expr2Column" msprop:Generator_ColumnPropNameInRow="Expr2" msprop:Generator_UserColumnName="Expr2" msprop:Generator_ColumnVarNameInTable="columnExpr2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr3" msprop:Generator_ColumnPropNameInTable="Expr3Column" msprop:Generator_ColumnPropNameInRow="Expr3" msprop:Generator_UserColumnName="Expr3" msprop:Generator_ColumnVarNameInTable="columnExpr3" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_UserColumnName="Code" msprop:Generator_ColumnVarNameInTable="columnCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_UserColumnName="Date" msprop:Generator_ColumnVarNameInTable="columnDate" type="xs:dateTime" />
              <xs:element name="IsPresent" msprop:Generator_ColumnPropNameInTable="IsPresentColumn" msprop:Generator_ColumnPropNameInRow="IsPresent" msprop:Generator_UserColumnName="IsPresent" msprop:Generator_ColumnVarNameInTable="columnIsPresent" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:__MigrationHistory" />
      <xs:field xpath="mstns:MigrationId" />
      <xs:field xpath="mstns:ContextKey" />
    </xs:unique>
    <xs:unique name="Attends_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Attends" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Courses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Courses" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Enrolleds_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrolleds" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Images_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Images" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Instructors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Instructors" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Reminders_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Reminders" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Rooms_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Rooms" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Sections_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sections" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="SectionDetails_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SectionDetails" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="AdminStudents_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AdminStudents" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Reminders1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Reminders1" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.Attends_dbo.Sections_SectionID" msdata:parent="Sections" msdata:child="Attends" msdata:parentkey="ID" msdata:childkey="SectionID" msprop:Generator_UserParentTable="Sections" msprop:Generator_UserChildTable="Attends" msprop:Generator_RelationVarName="_relationFK_dbo_Attends_dbo_Sections_SectionID" msprop:Generator_ChildPropName="GetAttendsRows" msprop:Generator_ParentPropName="SectionsRow" msprop:Generator_UserRelationName="FK_dbo.Attends_dbo.Sections_SectionID" />
      <msdata:Relationship name="FK_dbo.Attends_dbo.Students_StudentID" msdata:parent="Students" msdata:child="Attends" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="Attends" msprop:Generator_RelationVarName="_relationFK_dbo_Attends_dbo_Students_StudentID" msprop:Generator_ChildPropName="GetAttendsRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK_dbo.Attends_dbo.Students_StudentID" />
      <msdata:Relationship name="FK_dbo.Enrolleds_dbo.Sections_SectionID" msdata:parent="Sections" msdata:child="Enrolleds" msdata:parentkey="ID" msdata:childkey="SectionID" msprop:Generator_UserParentTable="Sections" msprop:Generator_UserChildTable="Enrolleds" msprop:Generator_RelationVarName="_relationFK_dbo_Enrolleds_dbo_Sections_SectionID" msprop:Generator_ChildPropName="GetEnrolledsRows" msprop:Generator_ParentPropName="SectionsRow" msprop:Generator_UserRelationName="FK_dbo.Enrolleds_dbo.Sections_SectionID" />
      <msdata:Relationship name="FK_dbo.Enrolleds_dbo.Students_StudentID" msdata:parent="Students" msdata:child="Enrolleds" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="Enrolleds" msprop:Generator_RelationVarName="_relationFK_dbo_Enrolleds_dbo_Students_StudentID" msprop:Generator_ChildPropName="GetEnrolledsRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK_dbo.Enrolleds_dbo.Students_StudentID" />
      <msdata:Relationship name="FK_dbo.Images_dbo.Students_StudentID" msdata:parent="Students" msdata:child="Images" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="Images" msprop:Generator_RelationVarName="_relationFK_dbo_Images_dbo_Students_StudentID" msprop:Generator_ChildPropName="GetImagesRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK_dbo.Images_dbo.Students_StudentID" />
      <msdata:Relationship name="FK_dbo.Sections_dbo.Courses_CourseID" msdata:parent="Courses" msdata:child="Sections" msdata:parentkey="ID" msdata:childkey="CourseID" msprop:Generator_UserParentTable="Courses" msprop:Generator_UserChildTable="Sections" msprop:Generator_RelationVarName="_relationFK_dbo_Sections_dbo_Courses_CourseID" msprop:Generator_ChildPropName="GetSectionsRows" msprop:Generator_UserRelationName="FK_dbo.Sections_dbo.Courses_CourseID" msprop:Generator_ParentPropName="CoursesRow" />
      <msdata:Relationship name="FK_dbo.Sections_dbo.Instructors_InstructorID" msdata:parent="Instructors" msdata:child="Sections" msdata:parentkey="ID" msdata:childkey="InstructorID" msprop:Generator_UserParentTable="Instructors" msprop:Generator_UserChildTable="Sections" msprop:Generator_RelationVarName="_relationFK_dbo_Sections_dbo_Instructors_InstructorID" msprop:Generator_ChildPropName="GetSectionsRows" msprop:Generator_UserRelationName="FK_dbo.Sections_dbo.Instructors_InstructorID" msprop:Generator_ParentPropName="InstructorsRow" />
      <msdata:Relationship name="FK_dbo.Sections_dbo.Rooms_RoomID" msdata:parent="Rooms" msdata:child="Sections" msdata:parentkey="ID" msdata:childkey="RoomID" msprop:Generator_UserParentTable="Rooms" msprop:Generator_UserChildTable="Sections" msprop:Generator_RelationVarName="_relationFK_dbo_Sections_dbo_Rooms_RoomID" msprop:Generator_ChildPropName="GetSectionsRows" msprop:Generator_UserRelationName="FK_dbo.Sections_dbo.Rooms_RoomID" msprop:Generator_ParentPropName="RoomsRow" />
      <msdata:Relationship name="FK_dbo.Sections_dbo.Courses_CourseID1" msdata:parent="SectionDetails" msdata:child="Sections" msdata:parentkey="ID" msdata:childkey="CourseID" msprop:Generator_UserParentTable="SectionDetails" msprop:Generator_UserChildTable="Sections" msprop:Generator_RelationVarName="_relationFK_dbo_Sections_dbo_Courses_CourseID1" msprop:Generator_ChildPropName="GetSectionsRows" msprop:Generator_UserRelationName="FK_dbo.Sections_dbo.Courses_CourseID1" msprop:Generator_ParentPropName="SectionDetailsRow" />
      <msdata:Relationship name="FK_dbo.Attends_dbo.Sections_SectionID1" msdata:parent="Sections" msdata:child="Instructor_x0020_Attendance" msdata:parentkey="ID" msdata:childkey="SectionID" msprop:Generator_UserParentTable="Sections" msprop:Generator_UserChildTable="Instructor Attendance" msprop:Generator_RelationVarName="_relationFK_dbo_Attends_dbo_Sections_SectionID1" msprop:Generator_ChildPropName="GetInstructor_AttendanceRows" msprop:Generator_ParentPropName="SectionsRow" msprop:Generator_UserRelationName="FK_dbo.Attends_dbo.Sections_SectionID1" />
      <msdata:Relationship name="FK_dbo.Attends_dbo.Students_StudentID2" msdata:parent="Students" msdata:child="Instructor_x0020_Attendance" msdata:parentkey="ID" msdata:childkey="StudentID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="Instructor Attendance" msprop:Generator_RelationVarName="_relationFK_dbo_Attends_dbo_Students_StudentID2" msprop:Generator_ChildPropName="GetInstructor_AttendanceRows" msprop:Generator_ParentPropName="StudentsRow" msprop:Generator_UserRelationName="FK_dbo.Attends_dbo.Students_StudentID2" />
      <msdata:Relationship name="FK_dbo.Sections_dbo.Courses_CourseID2" msdata:parent="InstructorView" msdata:child="Sections" msdata:parentkey="ID" msdata:childkey="CourseID" msprop:Generator_UserParentTable="InstructorView" msprop:Generator_UserChildTable="Sections" msprop:Generator_RelationVarName="_relationFK_dbo_Sections_dbo_Courses_CourseID2" msprop:Generator_ChildPropName="GetSectionsRows" msprop:Generator_UserRelationName="FK_dbo.Sections_dbo.Courses_CourseID2" msprop:Generator_ParentPropName="InstructorViewRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>